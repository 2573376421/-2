C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SEEKFREE_ICM20602
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_ICM20602.obj
COMPILER INVOKED BY: E:\keil 5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_ICM20602.c LARGE OMF2 OPTIMI
                    -ZE(8,SPEED) BROWSE FLOATFUZZY(2) INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\see
                    -kfree_peripheral;..\USER\inc;..\USER\src;..\CODE;..\..\Libraries\User_libraries) DEBUG PRINT(.\Out_File\SEEKFREE_ICM2060
                    -2.lst) TABS(2) OBJECT(.\Out_File\SEEKFREE_ICM20602.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          ICM20602
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Taobao      https://seekfree.taobao.com/
  16           * @date          2019-04-30
  17           * @note    
  18                    接线定义：
  19                    ------------------------------------ 
  20          
  21                    ------------------------------------ 
  22           *********************************************************************************************************
             -***********/
  23          
  24          
  25          #include "SEEKFREE_ICM20602.h"
  26          #include "SEEKFREE_IIC.h"
  27          #include "zf_delay.h"
  28          #include "zf_spi.h"
  29          
  30          int16 icm_gyro_x,icm_gyro_y,icm_gyro_z;
  31          int16 icm_acc_x,icm_acc_y,icm_acc_z;
  32          
  33          
  34          
  35          //--------------------------------------------------------------------------------------------------------
             ------------
  36          //  以下函数是使用软件IIC通信，相比较硬件IIC，软件IIC引脚更加灵活，可以使用任意普通IO
  37          //--------------------------------------------------------------------------------------------------------
             ------------
  38          //--------------------------------------------------------------------------------------------------------
             ------------
  39          //  @brief      ICM20602自检函数
  40          //  @param      NULL
  41          //  @return     void
  42          //  @since      v1.0
  43          //  Sample usage:       调用该函数前，请先调用模拟IIC的初始化
  44          //--------------------------------------------------------------------------------------------------------
             ------------
  45          void icm20602_self1_check(void)
  46          {
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 2   

  47   1          uint8 dat=0;
  48   1          while(0x12 != dat)   //读取ICM20602 ID
  49   1          {
  50   2              dat = simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_WHO_AM_I,SIMIIC);
  51   2              delay_ms(10);
  52   2              //卡在这里原因有以下几点
  53   2              //1 MPU6050坏了，如果是新的这样的概率极低
  54   2              //2 接线错误或者没有接好
  55   2              //3 可能你需要外接上拉电阻，上拉到3.3V
  56   2          }
  57   1      }
  58          
  59          
  60          
  61          //--------------------------------------------------------------------------------------------------------
             ------------
  62          //  @brief      软件IIC，初始化ICM20602
  63          //  @param      NULL
  64          //  @return     void
  65          //  @since      v1.0
  66          //  Sample usage:       调用该函数前，请先调用模拟IIC的初始化
  67          //--------------------------------------------------------------------------------------------------------
             ------------
  68          void icm20602_init_simiic(void)
  69          {
  70   1          delay_ms(10);  //上电延时
  71   1      
  72   1          //检测
  73   1          icm20602_self1_check();
  74   1      
  75   1          //复位
  76   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,0x80);               //复位设备
  77   1          delay_ms(2);                                                        //延时
  78   1          while(0x80 & simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,SIMIIC));//等待复位完成
  79   1      
  80   1          //配置参数
  81   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,0x01);               //时钟设置
  82   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_2,0x00);               //开启陀螺仪和加速度计
  83   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_CONFIG,0x01);                   //176HZ 1KHZ
  84   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_SMPLRT_DIV,0x07);               //采样速率 SAMPLE_RATE = I
             -NTERNAL_SAMPLE_RATE / (1 + SMPLRT_DIV)
  85   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_GYRO_CONFIG,0x18);              //±2000 dps
  86   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_ACCEL_CONFIG,0x10);             //±8g
  87   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_ACCEL_CONFIG_2,0x03);           //Average 4 samples   44.8
             -HZ   //0x23 Average 16 samples
  88   1      }
  89          
  90          
  91          //--------------------------------------------------------------------------------------------------------
             ------------
  92          //  @brief      获取ICM20602加速度计数据
  93          //  @param      NULL
  94          //  @return     void
  95          //  @since      v1.0
  96          //  Sample usage:       执行该函数后，直接查看对应的变量即可
  97          //--------------------------------------------------------------------------------------------------------
             ------------
  98          void get_icm20602_accdata_simiic(void)
  99          {
 100   1          uint8 dat[6];
 101   1      
 102   1          simiic_read_regs(ICM20602_DEV_ADDR, ICM20602_ACCEL_XOUT_H, dat, 6, SIMIIC);
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 3   

 103   1          icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 104   1          icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 105   1          icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 106   1      }
 107          
 108          //--------------------------------------------------------------------------------------------------------
             ------------
 109          //  @brief      获取ICM20602陀螺仪数据
 110          //  @param      NULL
 111          //  @return     void
 112          //  @since      v1.0
 113          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 114          //--------------------------------------------------------------------------------------------------------
             ------------
 115          void get_icm20602_gyro_simiic(void)
 116          {
 117   1          uint8 dat[6];
 118   1      
 119   1          simiic_read_regs(ICM20602_DEV_ADDR, ICM20602_GYRO_XOUT_H, dat, 6, SIMIIC);
 120   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 121   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 122   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 123   1      }
 124          
 125          
 126          
 127          
 128          
 129          
 130          
 131          //--------------------------------------------------------------------------------------------------------
             ------------
 132          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
 133          //--------------------------------------------------------------------------------------------------------
             ------------
 134          
 135          
 136          
 137          
 138          
 139          //--------------------------------------------------------------------------------------------------------
             ------------
 140          //  @brief      通过SPI写一个byte,同时读取一个byte
 141          //  @param      byte        发送的数据    
 142          //  @return     uint8       return 返回status状态
 143          //  @since      v1.0
 144          //  Sample usage:
 145          //--------------------------------------------------------------------------------------------------------
             ------------
 146          uint8 icm_simspi_wr_byte(uint8 byte)
 147          {
 148   1          uint8 i;
 149   1        
 150   1          for(i=0; i<8; i++)
 151   1          {
 152   2              ICM20602_MOSI(byte&0x80);
 153   2              byte <<= 1;
 154   2          ICM20602_SCK (0);
 155   2          
 156   2              ICM20602_SCK (1);
 157   2          byte |= ICM20602_MISO; 
 158   2          } 
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 4   

 159   1          return(byte);                                         
 160   1      }
 161          
 162          //--------------------------------------------------------------------------------------------------------
             ------------
 163          //  @brief      将val写入cmd对应的寄存器地址,同时返回status字节
 164          //  @param      cmd         命令字
 165          //  @param      val         待写入寄存器的数值
 166          //  @since      v1.0
 167          //  Sample usage:
 168          //--------------------------------------------------------------------------------------------------------
             ------------
 169          void icm_simspi_w_reg_byte(uint8 cmd, uint8 val)
 170          {
 171   1          ICM20602_CSN (0);
 172   1          cmd |= ICM20602_SPI_W;
 173   1          icm_simspi_wr_byte(cmd);                        
 174   1          icm_simspi_wr_byte(val);                                
 175   1          ICM20602_CSN (1);                                     
 176   1      }
 177          
 178          //--------------------------------------------------------------------------------------------------------
             ------------
 179          //  @brief      读取cmd所对应的寄存器地址
 180          //  @param      cmd         命令字
 181          //  @param      *val        存储读取的数据地址
 182          //  @since      v1.0
 183          //  Sample usage:
 184          //--------------------------------------------------------------------------------------------------------
             ------------
 185          void icm_simspi_r_reg_byte(uint8 cmd, uint8 *val)
 186          {
 187   1          ICM20602_CSN (0);
 188   1          cmd |= ICM20602_SPI_R;
 189   1          icm_simspi_wr_byte(cmd);                                
 190   1          *val = icm_simspi_wr_byte(0);                             
 191   1          ICM20602_CSN (1);                                     
 192   1      }
 193          
 194          //--------------------------------------------------------------------------------------------------------
             ------------
 195          //  @brief      读取cmd所对应的寄存器地址
 196          //  @param      cmd         命令字
 197          //  @param      *val        存储读取的数据地址
 198          //  @param      num         读取的数量
 199          //  @since      v1.0
 200          //  Sample usage:
 201          //--------------------------------------------------------------------------------------------------------
             ------------
 202          void icm_simspi_r_reg_bytes(uint8 cmd, uint8 *val, uint8 num)
 203          {
 204   1          uint16 i;
 205   1          ICM20602_CSN (0);
 206   1          cmd |= ICM20602_SPI_R;
 207   1          icm_simspi_wr_byte(cmd);                                    
 208   1          for(i=0; i<num; i++)  
 209   1              val[i] = icm_simspi_wr_byte(0);                       
 210   1          ICM20602_CSN (1);                                       
 211   1      }
 212          
 213          
 214          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 5   

             ------------
 215          //  @brief      ICM20602自检函数
 216          //  @param      NULL
 217          //  @return     void          
 218          //  @since      v1.0
 219          //  Sample usage:       
 220          //--------------------------------------------------------------------------------------------------------
             ------------
 221          void icm20602_self4_check(void)
 222          {
 223   1          uint8 val;
 224   1          do
 225   1          {
 226   2              icm_simspi_r_reg_byte(ICM20602_WHO_AM_I,&val);
 227   2          
 228   2              //卡在这里原因有以下几点
 229   2              //1 MPU6050坏了，如果是新的这样的概率极低
 230   2              //2 接线错误或者没有接好
 231   2              //3 可能你需要外接上拉电阻，上拉到3.3V
 232   2          }while(0x12 != val);
 233   1      }
 234          
 235          
 236          //--------------------------------------------------------------------------------------------------------
             ------------
 237          //  @brief      软件SPI，初始化ICM20602
 238          //  @param      NULL
 239          //  @return     void          
 240          //  @since      v1.0
 241          //  Sample usage:       
 242          //--------------------------------------------------------------------------------------------------------
             ------------
 243          void icm20602_init_simspi(void)
 244          {
 245   1          uint8 val;
 246   1      
 247   1          icm20602_self4_check();//检测
 248   1          
 249   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_1,0x80);//复位设备
 250   1          delay_ms(2);
 251   1          do
 252   1          {//等待复位成功
 253   2              icm_simspi_r_reg_byte(ICM20602_PWR_MGMT_1,&val);
 254   2          }while(0x41 != val);
 255   1          
 256   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_1,     0x01);            //时钟设置
 257   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_2,     0x00);            //开启陀螺仪和加速度计
 258   1          icm_simspi_w_reg_byte(ICM20602_CONFIG,         0x01);            //176HZ 1KHZ
 259   1          icm_simspi_w_reg_byte(ICM20602_SMPLRT_DIV,     0x07);            //采样速率 SAMPLE_RATE = INTERNAL_SAM
             -PLE_RATE / (1 + SMPLRT_DIV)
 260   1          icm_simspi_w_reg_byte(ICM20602_GYRO_CONFIG,    0x18);            //±2000 dps
 261   1          icm_simspi_w_reg_byte(ICM20602_ACCEL_CONFIG,   0x10);            //±8g
 262   1          icm_simspi_w_reg_byte(ICM20602_ACCEL_CONFIG_2, 0x03);            //Average 8 samples   44.8HZ
 263   1          
 264   1      }
 265          
 266          
 267          //--------------------------------------------------------------------------------------------------------
             ------------
 268          //  @brief      获取ICM20602加速度计数据
 269          //  @param      NULL
 270          //  @return     void
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 6   

 271          //  @since      v1.0
 272          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 273          //--------------------------------------------------------------------------------------------------------
             ------------
 274          void get_icm20602_accdata_simspi(void)
 275          {
 276   1          uint8 dat[6];
 277   1      
 278   1          
 279   1          icm_simspi_r_reg_bytes(ICM20602_ACCEL_XOUT_H, dat, 6);
 280   1          icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 281   1          icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 282   1          icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 283   1      }
 284          
 285          //--------------------------------------------------------------------------------------------------------
             ------------
 286          //  @brief      获取ICM20602陀螺仪数据
 287          //  @param      NULL
 288          //  @return     void
 289          //  @since      v1.0
 290          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 291          //--------------------------------------------------------------------------------------------------------
             ------------
 292          void get_icm20602_gyro_simspi(void)
 293          {
 294   1          uint8 dat[6];
 295   1          
 296   1          icm_simspi_r_reg_bytes(ICM20602_GYRO_XOUT_H, dat, 6);
 297   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 298   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 299   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 300   1      }
 301          
 302          
 303          //--------------------------------------------------------------------------------------------------------
             ------------
 304          //  以下函数是使用硬件SPI通信，相比较IIC，速度比IIC快非常多。
 305          //--------------------------------------------------------------------------------------------------------
             ------------
 306          
 307          
 308          
 309          
 310          
 311          
 312          
 313          //--------------------------------------------------------------------------------------------------------
             ------------
 314          //  @brief      通过SPI写一个byte,同时读取一个byte
 315          //  @param      byte        发送的数据    
 316          //  @return     uint8       return 返回status状态
 317          //  @since      v1.0
 318          //  Sample usage:
 319          //--------------------------------------------------------------------------------------------------------
             ------------
 320          uint8 icm_spi_wr_byte(uint8 byte)
 321          {
 322   1        byte = spi_mosi(byte);
 323   1          return byte;                                
 324   1      }
 325          
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 7   

 326          
 327          //--------------------------------------------------------------------------------------------------------
             ------------
 328          //  @brief      ICM20602 SPI写寄存器
 329          //  @param      cmd     寄存器地址
 330          //  @param      val     需要写入的数据
 331          //  @return     void          
 332          //  @since      v1.0
 333          //  Sample usage:       
 334          //--------------------------------------------------------------------------------------------------------
             ------------
 335          void icm_spi_w_reg_byte(uint8 cmd, uint8 val)
 336          {
 337   1        ICM20602_CS(0);
 338   1        
 339   1          cmd |= ICM20602_SPI_W;
 340   1        icm_spi_wr_byte(cmd);//写命令
 341   1        icm_spi_wr_byte(val);//写数据
 342   1        
 343   1        ICM20602_CS(1);
 344   1      }
 345          
 346          //--------------------------------------------------------------------------------------------------------
             ------------
 347          //  @brief      ICM20602 SPI读寄存器
 348          //  @param      cmd     寄存器地址
 349          //  @param      *val    接收数据的地址
 350          //  @return     void          
 351          //  @since      v1.0
 352          //  Sample usage:       
 353          //--------------------------------------------------------------------------------------------------------
             ------------
 354          
 355          void icm_spi_r_reg_byte(uint8 cmd, uint8 *val)
 356          {
 357   1        ICM20602_CS(0);
 358   1          cmd |= ICM20602_SPI_R;
 359   1        
 360   1        icm_spi_wr_byte(cmd);   //写命令
 361   1        *val = icm_spi_wr_byte(0);  //读数据
 362   1        
 363   1        ICM20602_CS(1);
 364   1      }
 365            
 366          //--------------------------------------------------------------------------------------------------------
             ------------
 367          //  @brief      ICM20602 SPI多字节读寄存器
 368          //  @param      cmd     寄存器地址
 369          //  @param      *val    接收数据的地址
 370          //  @param      num     读取数量
 371          //  @return     void          
 372          //  @since      v1.0
 373          //  Sample usage:       
 374          //--------------------------------------------------------------------------------------------------------
             ------------
 375          void icm_spi_r_reg_bytes(uint8 cmd,uint8 *val, uint8 num)
 376          {
 377   1          uint16 i;
 378   1        ICM20602_CS(0);
 379   1        
 380   1        cmd |= ICM20602_SPI_R;
 381   1        icm_spi_wr_byte(cmd); //写命令
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 8   

 382   1        
 383   1        for(i=0; i<num; i++)  
 384   1              val[i] = icm_spi_wr_byte(0);
 385   1        
 386   1        ICM20602_CS(1);
 387   1      }
 388          
 389          
 390          //--------------------------------------------------------------------------------------------------------
             ------------
 391          //  @brief      ICM20602自检函数
 392          //  @param      NULL
 393          //  @return     void          
 394          //  @since      v1.0
 395          //  Sample usage:       
 396          //--------------------------------------------------------------------------------------------------------
             ------------
 397          void icm20602_self3_check(void)
 398          {
 399   1          uint8 dat=0;
 400   1          while(0x12 != dat)   //读取ICM20602 ID
 401   1          {
 402   2              icm_spi_r_reg_byte(ICM20602_WHO_AM_I,&dat);
 403   2      
 404   2              delay_ms(10);
 405   2              //卡在这里原因有以下几点
 406   2              //1 MPU6050坏了，如果是新的这样的概率极低
 407   2              //2 接线错误或者没有接好
 408   2              //3 可能你需要外接上拉电阻，上拉到3.3V
 409   2          }
 410   1      
 411   1      }
 412               
 413          //--------------------------------------------------------------------------------------------------------
             ------------
 414          //  @brief      初始化ICM20602
 415          //  @param      NULL
 416          //  @return     void          
 417          //  @since      v1.0
 418          //  Sample usage:       
 419          //--------------------------------------------------------------------------------------------------------
             ------------
 420          void icm20602_init_spi(void)
 421          {
 422   1          uint8 val = 0x0;
 423   1      
 424   1          delay_ms(10);  //上电延时
 425   1        
 426   1        
 427   1          spi_init(ICM20602_SPI_N, ICM20602_SPI_SCLK_PIN, ICM20602_SPI_MOSI_PIN, ICM20602_SPI_MISO_PIN, 0, MASTE
             -R, SPI_SYSclk_DIV_4);
 428   1      
 429   1          icm20602_self3_check();//检测
 430   1          
 431   1          icm_spi_w_reg_byte(ICM20602_PWR_MGMT_1,0x80);//复位设备
 432   1          delay_ms(2);
 433   1        
 434   1          do
 435   1          {//等待复位成功
 436   2              icm_spi_r_reg_byte(ICM20602_PWR_MGMT_1,&val);
 437   2          }while(0x41 != val);
 438   1          
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 9   

 439   1          icm_spi_w_reg_byte(ICM20602_PWR_MGMT_1,     0x01);            //时钟设置
 440   1          icm_spi_w_reg_byte(ICM20602_PWR_MGMT_2,     0x00);            //开启陀螺仪和加速度计
 441   1          icm_spi_w_reg_byte(ICM20602_CONFIG,         0x01);            //176HZ 1KHZ
 442   1          icm_spi_w_reg_byte(ICM20602_SMPLRT_DIV,     0x07);            //采样速率 SAMPLE_RATE = INTERNAL_SAMPLE
             -_RATE / (1 + SMPLRT_DIV)
 443   1          icm_spi_w_reg_byte(ICM20602_GYRO_CONFIG,    0x18);            //±2000 dps
 444   1          icm_spi_w_reg_byte(ICM20602_ACCEL_CONFIG,   0x10);            //±8g
 445   1          icm_spi_w_reg_byte(ICM20602_ACCEL_CONFIG_2, 0x03);            //Average 4 samples   44.8HZ   //0x23 Av
             -erage 16 samples
 446   1      }
 447          
 448          //--------------------------------------------------------------------------------------------------------
             ------------
 449          //  @brief      获取ICM20602加速度计数据
 450          //  @param      NULL
 451          //  @return     void
 452          //  @since      v1.0
 453          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 454          //--------------------------------------------------------------------------------------------------------
             ------------
 455          void get_icm20602_accdata_spi(void)
 456          {
 457   1        uint8 dat[6];
 458   1        
 459   1        icm_spi_r_reg_bytes(ICM20602_ACCEL_XOUT_H, dat, 6);
 460   1        icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 461   1        icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 462   1        icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 463   1      }
 464          
 465          //--------------------------------------------------------------------------------------------------------
             ------------
 466          //  @brief      获取ICM20602陀螺仪数据
 467          //  @param      NULL
 468          //  @return     void
 469          //  @since      v1.0
 470          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 471          //--------------------------------------------------------------------------------------------------------
             ------------
 472          void get_icm20602_gyro_spi(void)
 473          {
 474   1          uint8 dat[6];
 475   1          
 476   1          icm_spi_r_reg_bytes(ICM20602_GYRO_XOUT_H, dat, 6);
 477   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 478   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 479   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 480   1      }
 481          
 482          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1117    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12      57
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   SEEKFREE_ICM20602                                                 08/09/2020 11:17:45 PAGE 10  

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
